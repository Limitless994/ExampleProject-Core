version: '3.8'

services:

  keycloak-postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloakpassword
      POSTGRES_DB: keycloak
    ports:
      - 5433:5432
    volumes:
      - ./docker_volumes/keycloak_postgres:/var/lib/postgresql/data
    networks:
      - example-network

  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - ./docker_volumes/postgres:/var/lib/postgresql/data
    networks:
      - example-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpassword
      KC_HOSTNAME: localhost
    ports:
      - 8080:8080
    volumes:
      - ./docker_volumes/keycloak:/opt/keycloak/data
    networks:
      - example-network
    depends_on:
      - keycloak-postgres
    command:
      - start-dev

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: java-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: docker
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: 'true'
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/ExampleRealm
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/ExampleRealm/protocol/openid-connect/certs
    ports:
      - 8081:8081
    volumes:
      - ./ExampleProject-Core:/app
    depends_on:
      - keycloak
      - postgres
    networks:
      - example-network

networks:
  example-network:
    driver: bridge
